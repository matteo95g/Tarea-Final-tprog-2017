
package publicador;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Publicador", targetNamespace = "http://publicador/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Publicador {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarTransferenciaRequest", output = "http://publicador/Publicador/agregarTransferenciaResponse")
    public void agregarTransferencia(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0,
        @WebParam(name = "arg1", partName = "arg1")
        int arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarPaypalRequest", output = "http://publicador/Publicador/agregarPaypalResponse")
    public void agregarPaypal(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0,
        @WebParam(name = "arg1", partName = "arg1")
        int arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarTarjetaRequest", output = "http://publicador/Publicador/agregarTarjetaResponse")
    public void agregarTarjeta(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0,
        @WebParam(name = "arg1", partName = "arg1")
        int arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6);

    /**
     * 
     * @return
     *     returns publicador.DtPaypal
     */
    @WebMethod(operationName = "DtPaypal")
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/DtPaypalRequest", output = "http://publicador/Publicador/DtPaypalResponse")
    public DtPaypal dtPaypal();

    /**
     * 
     * @return
     *     returns publicador.DtTransferencia
     */
    @WebMethod(operationName = "DtTransferencia")
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/DtTransferenciaRequest", output = "http://publicador/Publicador/DtTransferenciaResponse")
    public DtTransferencia dtTransferencia();

    /**
     * 
     * @return
     *     returns publicador.DtTarjeta
     */
    @WebMethod(operationName = "DtTarjeta")
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/DtTarjetaRequest", output = "http://publicador/Publicador/DtTarjetaResponse")
    public DtTarjeta dtTarjeta();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getUsuarioPorNickRequest", output = "http://publicador/Publicador/getUsuarioPorNickResponse")
    public DtUsuario getUsuarioPorNick(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getUsuarioPorCorreoRequest", output = "http://publicador/Publicador/getUsuarioPorCorreoResponse")
    public DtUsuario getUsuarioPorCorreo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/existeUsuarioPorNickRequest", output = "http://publicador/Publicador/existeUsuarioPorNickResponse")
    public boolean existeUsuarioPorNick(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/existeUsuarioPorCorreoRequest", output = "http://publicador/Publicador/existeUsuarioPorCorreoResponse")
    public boolean existeUsuarioPorCorreo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarRegistroRequest", output = "http://publicador/Publicador/agregarRegistroResponse")
    public void agregarRegistro(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/borrarProponenteSistemaRequest", output = "http://publicador/Publicador/borrarProponenteSistemaResponse")
    public void borrarProponenteSistema(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/obtenerPropuestasRequest", output = "http://publicador/Publicador/obtenerPropuestasResponse")
    public DtColecciones obtenerPropuestas();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtPropuesta
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/obtenerPropuestaPorTituloRequest", output = "http://publicador/Publicador/obtenerPropuestaPorTituloResponse")
    public DtPropuesta obtenerPropuestaPorTitulo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/addComentarioRequest", output = "http://publicador/Publicador/addComentarioResponse")
    public void addComentario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarFavoritaRequest", output = "http://publicador/Publicador/agregarFavoritaResponse")
    public void agregarFavorita(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/eliminarFavoritaRequest", output = "http://publicador/Publicador/eliminarFavoritaResponse")
    public void eliminarFavorita(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/existePropuestaPorTituloRequest", output = "http://publicador/Publicador/existePropuestaPorTituloResponse")
    public boolean existePropuestaPorTitulo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/obtenerFavoritasRequest", output = "http://publicador/Publicador/obtenerFavoritasResponse")
    public DtColecciones obtenerFavoritas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/existeEnListaRequest", output = "http://publicador/Publicador/existeEnListaResponse")
    public boolean existeEnLista(
        @WebParam(name = "arg0", partName = "arg0")
        DtColecciones arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/setEstadoRequest", output = "http://publicador/Publicador/setEstadoResponse")
    public void setEstado(
        @WebParam(name = "arg0", partName = "arg0")
        DtPropuesta arg0,
        @WebParam(name = "arg1", partName = "arg1")
        DtFechaCambio arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/obtenerColaboracionesRequest", output = "http://publicador/Publicador/obtenerColaboracionesResponse")
    public DtColecciones obtenerColaboraciones(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtColaboracion
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getColaboracionRequest", output = "http://publicador/Publicador/getColaboracionResponse")
    public DtColaboracion getColaboracion(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/realizarPagoRequest", output = "http://publicador/Publicador/realizarPagoResponse")
    public void realizarPago(
        @WebParam(name = "arg0", partName = "arg0")
        DtPago arg0,
        @WebParam(name = "arg1", partName = "arg1")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/obtenerComentariosRequest", output = "http://publicador/Publicador/obtenerComentariosResponse")
    public DtColecciones obtenerComentarios(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/dejarSeguirUsuarioRequest", output = "http://publicador/Publicador/dejarSeguirUsuarioResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/dejarSeguirUsuario/Fault/UsuarioNoExisteException")
    })
    public void dejarSeguirUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws CategoriaRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarCategoriaRequest", output = "http://publicador/Publicador/agregarCategoriaResponse", fault = {
        @FaultAction(className = CategoriaRepetidaException_Exception.class, value = "http://publicador/Publicador/agregarCategoria/Fault/CategoriaRepetidaException")
    })
    public void agregarCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws CategoriaRepetidaException_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getCategoriasRequest", output = "http://publicador/Publicador/getCategoriasResponse")
    public DtColecciones getCategorias();

    /**
     * 
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getProponentesRequest", output = "http://publicador/Publicador/getProponentesResponse")
    public DtColecciones getProponentes();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.Categoria
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getCategoriaRequest", output = "http://publicador/Publicador/getCategoriaResponse")
    public Categoria getCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg10
     * @param arg7
     * @param arg6
     * @param arg9
     * @param arg8
     * @throws PropuestaRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/addPropuestaRequest", output = "http://publicador/Publicador/addPropuestaResponse", fault = {
        @FaultAction(className = PropuestaRepetidaException_Exception.class, value = "http://publicador/Publicador/addPropuesta/Fault/PropuestaRepetidaException")
    })
    public void addPropuesta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        int arg7,
        @WebParam(name = "arg8", partName = "arg8")
        int arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10)
        throws PropuestaRepetidaException_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getColaboradoresRequest", output = "http://publicador/Publicador/getColaboradoresResponse")
    public DtColecciones getColaboradores();

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws UsuarioNoExisteException_Exception
     * @throws UsuarioYaEsSeguidorException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/seguirUsuarioRequest", output = "http://publicador/Publicador/seguirUsuarioResponse", fault = {
        @FaultAction(className = UsuarioYaEsSeguidorException_Exception.class, value = "http://publicador/Publicador/seguirUsuario/Fault/UsuarioYaEsSeguidorException"),
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/seguirUsuario/Fault/UsuarioNoExisteException")
    })
    public void seguirUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws UsuarioNoExisteException_Exception, UsuarioYaEsSeguidorException_Exception
    ;

    /**
     * 
     * @param arg7
     * @param arg6
     * @param arg9
     * @param arg8
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg13
     * @param arg1
     * @param arg0
     * @param arg10
     * @param arg11
     * @param arg12
     * @throws UsuarioRepetidoException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarUsuarioRequest", output = "http://publicador/Publicador/agregarUsuarioResponse", fault = {
        @FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://publicador/Publicador/agregarUsuario/Fault/UsuarioRepetidoException")
    })
    public void agregarUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        byte[] arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10,
        @WebParam(name = "arg11", partName = "arg11")
        String arg11,
        @WebParam(name = "arg12", partName = "arg12")
        String arg12,
        @WebParam(name = "arg13", partName = "arg13")
        String arg13)
        throws UsuarioRepetidoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/nickLibreRequest", output = "http://publicador/Publicador/nickLibreResponse")
    public boolean nickLibre(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @throws UsuarioYaColaboraException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarColaboracionRequest", output = "http://publicador/Publicador/agregarColaboracionResponse", fault = {
        @FaultAction(className = UsuarioYaColaboraException_Exception.class, value = "http://publicador/Publicador/agregarColaboracion/Fault/UsuarioYaColaboraException")
    })
    public void agregarColaboracion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        XMLGregorianCalendar arg3,
        @WebParam(name = "arg4", partName = "arg4")
        Retorno arg4)
        throws UsuarioYaColaboraException_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.DtColecciones
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/obtenerColaboradoresRequest", output = "http://publicador/Publicador/obtenerColaboradoresResponse")
    public DtColecciones obtenerColaboradores();

    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/getFileRequest", output = "http://publicador/Publicador/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://publicador/Publicador/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

}
